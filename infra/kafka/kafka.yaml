apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    service: kafka
  name: kafka
spec:
  serviceName: kafka-service
  replicas: 2
  selector:
    matchLabels:
      service: kafka
  template:
    metadata:
      labels:
        service: kafka
    spec:
      securityContext:
        fsGroup: 1000
      enableServiceLinks: false
      containers:
      - name: kafka
        imagePullPolicy: IfNotPresent
        image: bitnami/kafka:latest
        ports:
          - containerPort: 29092
          - containerPort: 9092
        env:
          - name: KAFKA_ADVERTISED_LISTENERS
            value: "INTERNAL://:29092,LISTENER_EXTERNAL://:9092"
          - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
            value: "true"
          - name: KAFKA_INTER_BROKER_LISTENER_NAME
            value: "INTERNAL"
          - name: KAFKA_LISTENERS
            value: "INTERNAL://:29092,LISTENER_EXTERNAL://:9092"
          - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
            value: "INTERNAL:PLAINTEXT,LISTENER_EXTERNAL:PLAINTEXT"
          - name: KAFKA_ZOOKEEPER_CONNECT
            value: "zookeeper:2181"
          - name: KAFKA_DEFAULT_REPLICATION_FACTOR
            value: "2"
          - name: KAFKA_MIN_INSYNC_REPLICAS
            value: "2"
          - name: KAFKA_NUM_PARTITIONS
            value: "3"
        # resources:
        #   requests:
        #     memory: "256Mi"
        #     cpu: "250m"
        #   limits:
        #     memory: "500Mi"
        #     cpu: "500m"
        volumeMounts:
          - mountPath: /var/lib/kafka/
            name: kafka-data
      hostname: kafka
      restartPolicy: Always
  volumeClaimTemplates:
    - metadata:
        name: kafka-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 5Gi
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: kafka
  name: kafka-service
spec:
  clusterIP: None
  selector:
    service: kafka
  ports:
    - name: internal
      port: 29092
      targetPort: 29092
    - name: external
      port: 30092
      targetPort: 9092
---
# # Kafka Drop Service
# apiVersion: v1
# kind: Service
# metadata:
#   name: kafka-drop-service
# spec:
#   selector:
#     app: kafka-drop
#   ports:
#     - protocol: TCP
#       port: 9000
#       targetPort: 9000
#   type: LoadBalancer
# ---
# # Kafka Drop Deployment
# kind: Deployment
# apiVersion: apps/v1
# metadata:
#   name: kafka-drop-deployment
#   labels:
#     app: kafka-drop
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       app: kafka-drop
#   template:
#     metadata:
#       labels:
#         app: kafka-drop
#     spec:
#       containers:
#       - name: kafka-drop
#         image: obsidiandynamics/kafdrop:latest
#         ports:
#         - containerPort: 9000
#         env:
#         - name: KAFKA_BROKERCONNECT
#           value: "kafka-service:9092"